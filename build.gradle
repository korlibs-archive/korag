buildscript {
    ext.korimVersion = '0.18.0'
    ext.kotlinVersion = '1.2.0'

    repositories {
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

allprojects {
    group 'com.soywiz'
    version "0.17.5-SNAPSHOT"

    if (project == rootProject) {
        new File(rootProject.rootDir, "korag/common/src/main/kotlin/com/soywiz/korag/KoragVersion.kt").write(
                "package com.soywiz.korag\n\nval KORAG_VERSION = \"$version\""
        )
    }

    apply plugin: 'java'
    //apply plugin: 'kotlin'
    apply plugin: 'maven'
    apply plugin: 'signing'
    apply plugin: 'maven-publish'

    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'

    //sourceCompatibility = 1.7
    //targetCompatibility = 1.7

    //kotlin { experimental { coroutines 'enable' } }

    configurations {
        provided
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    it.afterEvaluate {
        if (it.plugins.hasPlugin("kotlin-platform-common")) {
            dependencies {
                compile "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlinVersion"
                testCompile "org.jetbrains.kotlin:kotlin-test-common:$kotlinVersion"
                testCompile "org.jetbrains.kotlin:kotlin-test-annotations-common:$kotlinVersion"
            }

            kotlin {
                experimental { coroutines 'enable' }
            }
        }
        if (it.plugins.hasPlugin("kotlin-platform-jvm") || it.plugins.hasPlugin("kotlin")) {
            dependencies {
                compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
                testCompile "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
                testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
                testCompile "junit:junit:4.12"
            }

            kotlin {
                experimental { coroutines 'enable' }
            }

            compileJava.options.encoding = 'UTF-8'
            compileTestJava.options.encoding = 'UTF-8'

            sourceCompatibility = 1.7
            targetCompatibility = 1.7
        }
        if (it.plugins.hasPlugin("kotlin-platform-js") || it.plugins.hasPlugin("kotlin2js")) {
            dependencies {
                compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlinVersion"
                testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlinVersion"
                testCompile "org.jetbrains.kotlin:kotlin-test-js:$kotlinVersion"
            }

            kotlin {
                experimental { coroutines 'enable' }
            }

            compileKotlin2Js {
                kotlinOptions.moduleKind = "umd"
                kotlinOptions.sourceMap = true
            }

            compileTestKotlin2Js {
                kotlinOptions.moduleKind = "umd"
                kotlinOptions.sourceMap = true
            }
        }
    }

    task javadoc2(type: Javadoc) {
        failOnError = false
    }

    task javadocJar(type: Jar, dependsOn: javadoc2) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    artifacts {
        archives jar
        archives javadocJar
        archives sourcesJar
    }

// gradle uploadArchives
    if (project.hasProperty('sonatypeUsername')) {
        signing {
            sign configurations.archives
        }

        uploadArchives {
            repositories {
                mavenDeployer {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                        authentication(userName: project.sonatypeUsername, password: project.sonatypePassword)
                    }

                    pom.project {
                        name "${project.name}"
                        packaging 'jar'
                        description 'korag: Kotlin cORoutines Accelerated Graphics'
                        url 'https://github.com/soywiz/korag/'
                        inceptionYear '2017'

                        scm {
                            url 'scm:git@github.com:soywiz/korag.git'
                            connection 'scm:git@github.com:soywiz/korag.git'
                            developerConnection 'scm:git@github.com:soywiz/korag.git'
                        }

                        licenses {
                            license {
                                name 'The Apache Software License, Version 2.0'
                                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                                distribution 'repo'
                            }
                        }

                        developers {
                            developer {
                                id 'soywiz'
                                name 'Carlos Ballesteros Velasco'
                            }
                        }
                    }
                }
            }
        }
    }

    publishing {
        publications {
            MyPublication(MavenPublication) {
                from components.java
                groupId project.group
                artifactId project.name
                version "$project.version"
            }
        }
    }

    task deploy(dependsOn: ['install', 'uploadArchives']) {
    }
}